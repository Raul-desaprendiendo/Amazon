//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Amazon.Infra.ServiceReferenceStock {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductStock", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class ProductStock : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Ammount {
            get {
                return this.AmmountField;
            }
            set {
                if ((this.AmmountField.Equals(value) != true)) {
                    this.AmmountField = value;
                    this.RaisePropertyChanged("Ammount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceStock.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllStock", ReplyAction="http://tempuri.org/IService/GetAllStockResponse")]
        Amazon.Infra.ServiceReferenceStock.ProductStock[] GetAllStock();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllStock", ReplyAction="http://tempuri.org/IService/GetAllStockResponse")]
        System.Threading.Tasks.Task<Amazon.Infra.ServiceReferenceStock.ProductStock[]> GetAllStockAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductStockById", ReplyAction="http://tempuri.org/IService/GetProductStockByIdResponse")]
        Amazon.Infra.ServiceReferenceStock.ProductStock GetProductStockById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductStockById", ReplyAction="http://tempuri.org/IService/GetProductStockByIdResponse")]
        System.Threading.Tasks.Task<Amazon.Infra.ServiceReferenceStock.ProductStock> GetProductStockByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ReduceItemStock", ReplyAction="http://tempuri.org/IService/ReduceItemStockResponse")]
        bool ReduceItemStock(int id, int cuantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ReduceItemStock", ReplyAction="http://tempuri.org/IService/ReduceItemStockResponse")]
        System.Threading.Tasks.Task<bool> ReduceItemStockAsync(int id, int cuantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateProductStock", ReplyAction="http://tempuri.org/IService/UpdateProductStockResponse")]
        bool UpdateProductStock(Amazon.Infra.ServiceReferenceStock.ProductStock product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateProductStock", ReplyAction="http://tempuri.org/IService/UpdateProductStockResponse")]
        System.Threading.Tasks.Task<bool> UpdateProductStockAsync(Amazon.Infra.ServiceReferenceStock.ProductStock product);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Amazon.Infra.ServiceReferenceStock.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Amazon.Infra.ServiceReferenceStock.IService>, Amazon.Infra.ServiceReferenceStock.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Amazon.Infra.ServiceReferenceStock.ProductStock[] GetAllStock() {
            return base.Channel.GetAllStock();
        }
        
        public System.Threading.Tasks.Task<Amazon.Infra.ServiceReferenceStock.ProductStock[]> GetAllStockAsync() {
            return base.Channel.GetAllStockAsync();
        }
        
        public Amazon.Infra.ServiceReferenceStock.ProductStock GetProductStockById(int id) {
            return base.Channel.GetProductStockById(id);
        }
        
        public System.Threading.Tasks.Task<Amazon.Infra.ServiceReferenceStock.ProductStock> GetProductStockByIdAsync(int id) {
            return base.Channel.GetProductStockByIdAsync(id);
        }
        
        public bool ReduceItemStock(int id, int cuantity) {
            return base.Channel.ReduceItemStock(id, cuantity);
        }
        
        public System.Threading.Tasks.Task<bool> ReduceItemStockAsync(int id, int cuantity) {
            return base.Channel.ReduceItemStockAsync(id, cuantity);
        }
        
        public bool UpdateProductStock(Amazon.Infra.ServiceReferenceStock.ProductStock product) {
            return base.Channel.UpdateProductStock(product);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProductStockAsync(Amazon.Infra.ServiceReferenceStock.ProductStock product) {
            return base.Channel.UpdateProductStockAsync(product);
        }
    }
}
